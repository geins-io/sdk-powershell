#
# Geins Management API
#  Geins Management API is an RESTful api to power your applications who manages your geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip With this API, you can build custom applications and integrate with third-party systems, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API key`. You can create as many API keys as you need. Each `API key` is connected to a specific account so you can keep track of operations and manage keys. You can find your `API key` in the `geins merchant center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are supported:   - `API Key`   - `Basic Auth` 
# Version: v1.7
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

Describe -tag 'PSOpenAPITools' -name 'ProductParameterApi' {
    Context 'Invoke-BatchReplaceProductParameterValues' {
        It 'Test Invoke-BatchReplaceProductParameterValues' {
            #$TestResult = Invoke-BatchReplaceProductParameterValues -ProductParameterBatch "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Invoke-BatchUpdateProductParameterValues' {
        It 'Test Invoke-BatchUpdateProductParameterValues' {
            #$TestResult = Invoke-BatchUpdateProductParameterValues -ProductParameterBatch "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-OrUpdateProductParameterValue' {
        It 'Test New-OrUpdateProductParameterValue' {
            #$TestResult = New-OrUpdateProductParameterValue -ProductParameterValue "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-ProductParameter' {
        It 'Test New-ProductParameter' {
            #$TestResult = New-ProductParameter -ProductParameter "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-ProductParameterGroup' {
        It 'Test New-ProductParameterGroup' {
            #$TestResult = New-ProductParameterGroup -ProductParameterGroup "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'New-ProductParameterPredefinedValue' {
        It 'Test New-ProductParameterPredefinedValue' {
            #$TestResult = New-ProductParameterPredefinedValue -ProductParameterPredefinedValue "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-ProductParameterById' {
        It 'Test Get-ProductParameterById' {
            #$TestResult = Get-ProductParameterById -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-ProductParameterGroupById' {
        It 'Test Get-ProductParameterGroupById' {
            #$TestResult = Get-ProductParameterGroupById -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-ProductParameterPredefinedValue' {
        It 'Test Get-ProductParameterPredefinedValue' {
            #$TestResult = Get-ProductParameterPredefinedValue -Id "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Get-ProductParameterValue' {
        It 'Test Get-ProductParameterValue' {
            #$TestResult = Get-ProductParameterValue -Id "TEST_VALUE" -PredefinedValueId "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-ProductParameter' {
        It 'Test Update-ProductParameter' {
            #$TestResult = Update-ProductParameter -Id "TEST_VALUE" -ProductParameter "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

    Context 'Update-ProductParameterGroup' {
        It 'Test Update-ProductParameterGroup' {
            #$TestResult = Update-ProductParameterGroup -Id "TEST_VALUE" -ProductParameterGroup "TEST_VALUE"
            #$TestResult | Should -BeOfType TODO
            #$TestResult.property | Should -Be 0
        }
    }

}
