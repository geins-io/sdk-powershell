#
# Geins Management API
#  Geins Management API is an RESTful api to power your applications who manages your geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip With this API, you can build custom applications and integrate with third-party systems, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API key`. You can create as many API keys as you need. Each `API key` is connected to a specific account so you can keep track of operations and manage keys. You can find your `API key` in the `geins merchant center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are supported:   - `API Key`   - `Basic Auth` 
# Version: v1.7
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

No description available.

.PARAMETER OrderId
No description available.
.PARAMETER ExternalOrderId
No description available.
.PARAMETER CartId
No description available.
.PARAMETER SessionId
No description available.
.PARAMETER SiteId
No description available.
.PARAMETER Currency
No description available.
.PARAMETER Status
No description available.
.PARAMETER IpAddress
No description available.
.PARAMETER Message
No description available.
.PARAMETER InternalMessage
No description available.
.PARAMETER Locale
No description available.
.PARAMETER Rows
No description available.
.PARAMETER CampaignId
No description available.
.PARAMETER CampaignCode
No description available.
.PARAMETER CampaignName
No description available.
.PARAMETER CampaignIds
No description available.
.PARAMETER CampaignNames
No description available.
.PARAMETER CustomerId
No description available.
.PARAMETER CustomerTypeId
No description available.
.PARAMETER Gender
No description available.
.PARAMETER DateOfBirth
No description available.
.PARAMETER PersonalId
No description available.
.PARAMETER UserAgent
No description available.
.PARAMETER MetaData
No description available.
.PARAMETER PaymentId
No description available.
.PARAMETER TransactionId
No description available.
.PARAMETER SecondaryTransactionId
No description available.
.PARAMETER Country
No description available.
.PARAMETER Company
No description available.
.PARAMETER OrganizationNumber
No description available.
.PARAMETER FirstName
No description available.
.PARAMETER LastName
No description available.
.PARAMETER Email
No description available.
.PARAMETER Address1
No description available.
.PARAMETER Address2
No description available.
.PARAMETER Zip
No description available.
.PARAMETER City
No description available.
.PARAMETER Region
No description available.
.PARAMETER Phone
No description available.
.PARAMETER MobilePhone
No description available.
.PARAMETER CareOf
No description available.
.PARAMETER ShippingId
No description available.
.PARAMETER ShippingCountry
No description available.
.PARAMETER ShippingCompany
No description available.
.PARAMETER ShippingOrganizationNumber
No description available.
.PARAMETER ShippingFirstName
No description available.
.PARAMETER ShippingLastName
No description available.
.PARAMETER ShippingEmail
No description available.
.PARAMETER ShippingAddress1
No description available.
.PARAMETER ShippingAddress2
No description available.
.PARAMETER ShippingZip
No description available.
.PARAMETER ShippingCity
No description available.
.PARAMETER ShippingRegion
No description available.
.PARAMETER ShippingPhone
No description available.
.PARAMETER ShippingMobilePhone
No description available.
.PARAMETER ShippingCareOf
No description available.
.PARAMETER PickupPoint
No description available.
.PARAMETER DesiredDeliveryDate
No description available.
.PARAMETER FreightClass
No description available.
.PARAMETER Sum
No description available.
.PARAMETER ExpectedSum
No description available.
.PARAMETER OrderValueIncVat
No description available.
.PARAMETER OrderValueExVat
No description available.
.PARAMETER ItemValueIncVat
No description available.
.PARAMETER ItemValueExVat
No description available.
.PARAMETER DiscountIncVat
No description available.
.PARAMETER DiscountExVat
No description available.
.PARAMETER PercentDiscount
No description available.
.PARAMETER Balance
No description available.
.PARAMETER ShippingFeeIncVat
No description available.
.PARAMETER ShippingFeeExVat
No description available.
.PARAMETER PaymentFeeIncVat
No description available.
.PARAMETER PaymentFeeExVat
No description available.
.OUTPUTS

OrderCheckoutOrder<PSCustomObject>
#>

function Initialize-OrderCheckoutOrder {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${OrderId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ExternalOrderId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CartId},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SessionId},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${SiteId},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Currency},
        [Parameter(Position = 6, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Status},
        [Parameter(Position = 7, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${IpAddress},
        [Parameter(Position = 8, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Message},
        [Parameter(Position = 9, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${InternalMessage},
        [Parameter(Position = 10, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Locale},
        [Parameter(Position = 11, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject[]]
        ${Rows},
        [Parameter(Position = 12, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CampaignId},
        [Parameter(Position = 13, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CampaignCode},
        [Parameter(Position = 14, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CampaignName},
        [Parameter(Position = 15, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${CampaignIds},
        [Parameter(Position = 16, ValueFromPipelineByPropertyName = $true)]
        [String[]]
        ${CampaignNames},
        [Parameter(Position = 17, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CustomerId},
        [Parameter(Position = 18, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CustomerTypeId},
        [Parameter(Position = 19, ValueFromPipelineByPropertyName = $true)]
        [ValidateSet("0", "1", "2")]
        [System.Nullable[Int32]]
        ${Gender},
        [Parameter(Position = 20, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${DateOfBirth},
        [Parameter(Position = 21, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PersonalId},
        [Parameter(Position = 22, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${UserAgent},
        [Parameter(Position = 23, ValueFromPipelineByPropertyName = $true)]
        [System.Collections.Hashtable]
        ${MetaData},
        [Parameter(Position = 24, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${PaymentId},
        [Parameter(Position = 25, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${TransactionId},
        [Parameter(Position = 26, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${SecondaryTransactionId},
        [Parameter(Position = 27, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Country},
        [Parameter(Position = 28, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Company},
        [Parameter(Position = 29, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${OrganizationNumber},
        [Parameter(Position = 30, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${FirstName},
        [Parameter(Position = 31, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${LastName},
        [Parameter(Position = 32, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Email},
        [Parameter(Position = 33, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Address1},
        [Parameter(Position = 34, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Address2},
        [Parameter(Position = 35, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Zip},
        [Parameter(Position = 36, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${City},
        [Parameter(Position = 37, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Region},
        [Parameter(Position = 38, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${Phone},
        [Parameter(Position = 39, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${MobilePhone},
        [Parameter(Position = 40, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${CareOf},
        [Parameter(Position = 41, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${ShippingId},
        [Parameter(Position = 42, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ShippingCountry},
        [Parameter(Position = 43, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ShippingCompany},
        [Parameter(Position = 44, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ShippingOrganizationNumber},
        [Parameter(Position = 45, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ShippingFirstName},
        [Parameter(Position = 46, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ShippingLastName},
        [Parameter(Position = 47, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ShippingEmail},
        [Parameter(Position = 48, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ShippingAddress1},
        [Parameter(Position = 49, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ShippingAddress2},
        [Parameter(Position = 50, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ShippingZip},
        [Parameter(Position = 51, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ShippingCity},
        [Parameter(Position = 52, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ShippingRegion},
        [Parameter(Position = 53, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ShippingPhone},
        [Parameter(Position = 54, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ShippingMobilePhone},
        [Parameter(Position = 55, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${ShippingCareOf},
        [Parameter(Position = 56, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${PickupPoint},
        [Parameter(Position = 57, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[System.DateTime]]
        ${DesiredDeliveryDate},
        [Parameter(Position = 58, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${FreightClass},
        [Parameter(Position = 59, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${Sum},
        [Parameter(Position = 60, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${ExpectedSum},
        [Parameter(Position = 61, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${OrderValueIncVat},
        [Parameter(Position = 62, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${OrderValueExVat},
        [Parameter(Position = 63, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${ItemValueIncVat},
        [Parameter(Position = 64, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${ItemValueExVat},
        [Parameter(Position = 65, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${DiscountIncVat},
        [Parameter(Position = 66, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${DiscountExVat},
        [Parameter(Position = 67, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${PercentDiscount},
        [Parameter(Position = 68, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${Balance},
        [Parameter(Position = 69, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${ShippingFeeIncVat},
        [Parameter(Position = 70, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${ShippingFeeExVat},
        [Parameter(Position = 71, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${PaymentFeeIncVat},
        [Parameter(Position = 72, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${PaymentFeeExVat}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => OrderCheckoutOrder' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "OrderId" = ${OrderId}
            "ExternalOrderId" = ${ExternalOrderId}
            "CartId" = ${CartId}
            "SessionId" = ${SessionId}
            "SiteId" = ${SiteId}
            "Currency" = ${Currency}
            "Status" = ${Status}
            "IpAddress" = ${IpAddress}
            "Message" = ${Message}
            "InternalMessage" = ${InternalMessage}
            "Locale" = ${Locale}
            "Rows" = ${Rows}
            "CampaignId" = ${CampaignId}
            "CampaignCode" = ${CampaignCode}
            "CampaignName" = ${CampaignName}
            "CampaignIds" = ${CampaignIds}
            "CampaignNames" = ${CampaignNames}
            "CustomerId" = ${CustomerId}
            "CustomerTypeId" = ${CustomerTypeId}
            "Gender" = ${Gender}
            "DateOfBirth" = ${DateOfBirth}
            "PersonalId" = ${PersonalId}
            "UserAgent" = ${UserAgent}
            "MetaData" = ${MetaData}
            "PaymentId" = ${PaymentId}
            "TransactionId" = ${TransactionId}
            "SecondaryTransactionId" = ${SecondaryTransactionId}
            "Country" = ${Country}
            "Company" = ${Company}
            "OrganizationNumber" = ${OrganizationNumber}
            "FirstName" = ${FirstName}
            "LastName" = ${LastName}
            "Email" = ${Email}
            "Address1" = ${Address1}
            "Address2" = ${Address2}
            "Zip" = ${Zip}
            "City" = ${City}
            "Region" = ${Region}
            "Phone" = ${Phone}
            "MobilePhone" = ${MobilePhone}
            "CareOf" = ${CareOf}
            "ShippingId" = ${ShippingId}
            "ShippingCountry" = ${ShippingCountry}
            "ShippingCompany" = ${ShippingCompany}
            "ShippingOrganizationNumber" = ${ShippingOrganizationNumber}
            "ShippingFirstName" = ${ShippingFirstName}
            "ShippingLastName" = ${ShippingLastName}
            "ShippingEmail" = ${ShippingEmail}
            "ShippingAddress1" = ${ShippingAddress1}
            "ShippingAddress2" = ${ShippingAddress2}
            "ShippingZip" = ${ShippingZip}
            "ShippingCity" = ${ShippingCity}
            "ShippingRegion" = ${ShippingRegion}
            "ShippingPhone" = ${ShippingPhone}
            "ShippingMobilePhone" = ${ShippingMobilePhone}
            "ShippingCareOf" = ${ShippingCareOf}
            "PickupPoint" = ${PickupPoint}
            "DesiredDeliveryDate" = ${DesiredDeliveryDate}
            "FreightClass" = ${FreightClass}
            "Sum" = ${Sum}
            "ExpectedSum" = ${ExpectedSum}
            "OrderValueIncVat" = ${OrderValueIncVat}
            "OrderValueExVat" = ${OrderValueExVat}
            "ItemValueIncVat" = ${ItemValueIncVat}
            "ItemValueExVat" = ${ItemValueExVat}
            "DiscountIncVat" = ${DiscountIncVat}
            "DiscountExVat" = ${DiscountExVat}
            "PercentDiscount" = ${PercentDiscount}
            "Balance" = ${Balance}
            "ShippingFeeIncVat" = ${ShippingFeeIncVat}
            "ShippingFeeExVat" = ${ShippingFeeExVat}
            "PaymentFeeIncVat" = ${PaymentFeeIncVat}
            "PaymentFeeExVat" = ${PaymentFeeExVat}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to OrderCheckoutOrder<PSCustomObject>

.DESCRIPTION

Convert from JSON to OrderCheckoutOrder<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

OrderCheckoutOrder<PSCustomObject>
#>
function ConvertFrom-JsonToOrderCheckoutOrder {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => OrderCheckoutOrder' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in OrderCheckoutOrder
        $AllProperties = ("OrderId", "ExternalOrderId", "CartId", "SessionId", "SiteId", "Currency", "Status", "IpAddress", "Message", "InternalMessage", "Locale", "Rows", "CampaignId", "CampaignCode", "CampaignName", "CampaignIds", "CampaignNames", "CustomerId", "CustomerTypeId", "Gender", "DateOfBirth", "PersonalId", "UserAgent", "MetaData", "PaymentId", "TransactionId", "SecondaryTransactionId", "Country", "Company", "OrganizationNumber", "FirstName", "LastName", "Email", "Address1", "Address2", "Zip", "City", "Region", "Phone", "MobilePhone", "CareOf", "ShippingId", "ShippingCountry", "ShippingCompany", "ShippingOrganizationNumber", "ShippingFirstName", "ShippingLastName", "ShippingEmail", "ShippingAddress1", "ShippingAddress2", "ShippingZip", "ShippingCity", "ShippingRegion", "ShippingPhone", "ShippingMobilePhone", "ShippingCareOf", "PickupPoint", "DesiredDeliveryDate", "FreightClass", "Sum", "ExpectedSum", "OrderValueIncVat", "OrderValueExVat", "ItemValueIncVat", "ItemValueExVat", "DiscountIncVat", "DiscountExVat", "PercentDiscount", "Balance", "ShippingFeeIncVat", "ShippingFeeExVat", "PaymentFeeIncVat", "PaymentFeeExVat")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "OrderId"))) { #optional property not found
            $OrderId = $null
        } else {
            $OrderId = $JsonParameters.PSobject.Properties["OrderId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ExternalOrderId"))) { #optional property not found
            $ExternalOrderId = $null
        } else {
            $ExternalOrderId = $JsonParameters.PSobject.Properties["ExternalOrderId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "CartId"))) { #optional property not found
            $CartId = $null
        } else {
            $CartId = $JsonParameters.PSobject.Properties["CartId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "SessionId"))) { #optional property not found
            $SessionId = $null
        } else {
            $SessionId = $JsonParameters.PSobject.Properties["SessionId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "SiteId"))) { #optional property not found
            $SiteId = $null
        } else {
            $SiteId = $JsonParameters.PSobject.Properties["SiteId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Currency"))) { #optional property not found
            $Currency = $null
        } else {
            $Currency = $JsonParameters.PSobject.Properties["Currency"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Status"))) { #optional property not found
            $Status = $null
        } else {
            $Status = $JsonParameters.PSobject.Properties["Status"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "IpAddress"))) { #optional property not found
            $IpAddress = $null
        } else {
            $IpAddress = $JsonParameters.PSobject.Properties["IpAddress"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Message"))) { #optional property not found
            $Message = $null
        } else {
            $Message = $JsonParameters.PSobject.Properties["Message"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "InternalMessage"))) { #optional property not found
            $InternalMessage = $null
        } else {
            $InternalMessage = $JsonParameters.PSobject.Properties["InternalMessage"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Locale"))) { #optional property not found
            $Locale = $null
        } else {
            $Locale = $JsonParameters.PSobject.Properties["Locale"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Rows"))) { #optional property not found
            $Rows = $null
        } else {
            $Rows = $JsonParameters.PSobject.Properties["Rows"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "CampaignId"))) { #optional property not found
            $CampaignId = $null
        } else {
            $CampaignId = $JsonParameters.PSobject.Properties["CampaignId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "CampaignCode"))) { #optional property not found
            $CampaignCode = $null
        } else {
            $CampaignCode = $JsonParameters.PSobject.Properties["CampaignCode"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "CampaignName"))) { #optional property not found
            $CampaignName = $null
        } else {
            $CampaignName = $JsonParameters.PSobject.Properties["CampaignName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "CampaignIds"))) { #optional property not found
            $CampaignIds = $null
        } else {
            $CampaignIds = $JsonParameters.PSobject.Properties["CampaignIds"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "CampaignNames"))) { #optional property not found
            $CampaignNames = $null
        } else {
            $CampaignNames = $JsonParameters.PSobject.Properties["CampaignNames"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "CustomerId"))) { #optional property not found
            $CustomerId = $null
        } else {
            $CustomerId = $JsonParameters.PSobject.Properties["CustomerId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "CustomerTypeId"))) { #optional property not found
            $CustomerTypeId = $null
        } else {
            $CustomerTypeId = $JsonParameters.PSobject.Properties["CustomerTypeId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Gender"))) { #optional property not found
            $Gender = $null
        } else {
            $Gender = $JsonParameters.PSobject.Properties["Gender"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "DateOfBirth"))) { #optional property not found
            $DateOfBirth = $null
        } else {
            $DateOfBirth = $JsonParameters.PSobject.Properties["DateOfBirth"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "PersonalId"))) { #optional property not found
            $PersonalId = $null
        } else {
            $PersonalId = $JsonParameters.PSobject.Properties["PersonalId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "UserAgent"))) { #optional property not found
            $UserAgent = $null
        } else {
            $UserAgent = $JsonParameters.PSobject.Properties["UserAgent"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "MetaData"))) { #optional property not found
            $MetaData = $null
        } else {
            $MetaData = $JsonParameters.PSobject.Properties["MetaData"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "PaymentId"))) { #optional property not found
            $PaymentId = $null
        } else {
            $PaymentId = $JsonParameters.PSobject.Properties["PaymentId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "TransactionId"))) { #optional property not found
            $TransactionId = $null
        } else {
            $TransactionId = $JsonParameters.PSobject.Properties["TransactionId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "SecondaryTransactionId"))) { #optional property not found
            $SecondaryTransactionId = $null
        } else {
            $SecondaryTransactionId = $JsonParameters.PSobject.Properties["SecondaryTransactionId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Country"))) { #optional property not found
            $Country = $null
        } else {
            $Country = $JsonParameters.PSobject.Properties["Country"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Company"))) { #optional property not found
            $Company = $null
        } else {
            $Company = $JsonParameters.PSobject.Properties["Company"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "OrganizationNumber"))) { #optional property not found
            $OrganizationNumber = $null
        } else {
            $OrganizationNumber = $JsonParameters.PSobject.Properties["OrganizationNumber"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "FirstName"))) { #optional property not found
            $FirstName = $null
        } else {
            $FirstName = $JsonParameters.PSobject.Properties["FirstName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "LastName"))) { #optional property not found
            $LastName = $null
        } else {
            $LastName = $JsonParameters.PSobject.Properties["LastName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Email"))) { #optional property not found
            $Email = $null
        } else {
            $Email = $JsonParameters.PSobject.Properties["Email"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Address1"))) { #optional property not found
            $Address1 = $null
        } else {
            $Address1 = $JsonParameters.PSobject.Properties["Address1"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Address2"))) { #optional property not found
            $Address2 = $null
        } else {
            $Address2 = $JsonParameters.PSobject.Properties["Address2"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Zip"))) { #optional property not found
            $Zip = $null
        } else {
            $Zip = $JsonParameters.PSobject.Properties["Zip"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "City"))) { #optional property not found
            $City = $null
        } else {
            $City = $JsonParameters.PSobject.Properties["City"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Region"))) { #optional property not found
            $Region = $null
        } else {
            $Region = $JsonParameters.PSobject.Properties["Region"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Phone"))) { #optional property not found
            $Phone = $null
        } else {
            $Phone = $JsonParameters.PSobject.Properties["Phone"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "MobilePhone"))) { #optional property not found
            $MobilePhone = $null
        } else {
            $MobilePhone = $JsonParameters.PSobject.Properties["MobilePhone"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "CareOf"))) { #optional property not found
            $CareOf = $null
        } else {
            $CareOf = $JsonParameters.PSobject.Properties["CareOf"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ShippingId"))) { #optional property not found
            $ShippingId = $null
        } else {
            $ShippingId = $JsonParameters.PSobject.Properties["ShippingId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ShippingCountry"))) { #optional property not found
            $ShippingCountry = $null
        } else {
            $ShippingCountry = $JsonParameters.PSobject.Properties["ShippingCountry"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ShippingCompany"))) { #optional property not found
            $ShippingCompany = $null
        } else {
            $ShippingCompany = $JsonParameters.PSobject.Properties["ShippingCompany"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ShippingOrganizationNumber"))) { #optional property not found
            $ShippingOrganizationNumber = $null
        } else {
            $ShippingOrganizationNumber = $JsonParameters.PSobject.Properties["ShippingOrganizationNumber"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ShippingFirstName"))) { #optional property not found
            $ShippingFirstName = $null
        } else {
            $ShippingFirstName = $JsonParameters.PSobject.Properties["ShippingFirstName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ShippingLastName"))) { #optional property not found
            $ShippingLastName = $null
        } else {
            $ShippingLastName = $JsonParameters.PSobject.Properties["ShippingLastName"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ShippingEmail"))) { #optional property not found
            $ShippingEmail = $null
        } else {
            $ShippingEmail = $JsonParameters.PSobject.Properties["ShippingEmail"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ShippingAddress1"))) { #optional property not found
            $ShippingAddress1 = $null
        } else {
            $ShippingAddress1 = $JsonParameters.PSobject.Properties["ShippingAddress1"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ShippingAddress2"))) { #optional property not found
            $ShippingAddress2 = $null
        } else {
            $ShippingAddress2 = $JsonParameters.PSobject.Properties["ShippingAddress2"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ShippingZip"))) { #optional property not found
            $ShippingZip = $null
        } else {
            $ShippingZip = $JsonParameters.PSobject.Properties["ShippingZip"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ShippingCity"))) { #optional property not found
            $ShippingCity = $null
        } else {
            $ShippingCity = $JsonParameters.PSobject.Properties["ShippingCity"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ShippingRegion"))) { #optional property not found
            $ShippingRegion = $null
        } else {
            $ShippingRegion = $JsonParameters.PSobject.Properties["ShippingRegion"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ShippingPhone"))) { #optional property not found
            $ShippingPhone = $null
        } else {
            $ShippingPhone = $JsonParameters.PSobject.Properties["ShippingPhone"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ShippingMobilePhone"))) { #optional property not found
            $ShippingMobilePhone = $null
        } else {
            $ShippingMobilePhone = $JsonParameters.PSobject.Properties["ShippingMobilePhone"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ShippingCareOf"))) { #optional property not found
            $ShippingCareOf = $null
        } else {
            $ShippingCareOf = $JsonParameters.PSobject.Properties["ShippingCareOf"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "PickupPoint"))) { #optional property not found
            $PickupPoint = $null
        } else {
            $PickupPoint = $JsonParameters.PSobject.Properties["PickupPoint"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "DesiredDeliveryDate"))) { #optional property not found
            $DesiredDeliveryDate = $null
        } else {
            $DesiredDeliveryDate = $JsonParameters.PSobject.Properties["DesiredDeliveryDate"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "FreightClass"))) { #optional property not found
            $FreightClass = $null
        } else {
            $FreightClass = $JsonParameters.PSobject.Properties["FreightClass"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Sum"))) { #optional property not found
            $Sum = $null
        } else {
            $Sum = $JsonParameters.PSobject.Properties["Sum"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ExpectedSum"))) { #optional property not found
            $ExpectedSum = $null
        } else {
            $ExpectedSum = $JsonParameters.PSobject.Properties["ExpectedSum"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "OrderValueIncVat"))) { #optional property not found
            $OrderValueIncVat = $null
        } else {
            $OrderValueIncVat = $JsonParameters.PSobject.Properties["OrderValueIncVat"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "OrderValueExVat"))) { #optional property not found
            $OrderValueExVat = $null
        } else {
            $OrderValueExVat = $JsonParameters.PSobject.Properties["OrderValueExVat"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ItemValueIncVat"))) { #optional property not found
            $ItemValueIncVat = $null
        } else {
            $ItemValueIncVat = $JsonParameters.PSobject.Properties["ItemValueIncVat"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ItemValueExVat"))) { #optional property not found
            $ItemValueExVat = $null
        } else {
            $ItemValueExVat = $JsonParameters.PSobject.Properties["ItemValueExVat"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "DiscountIncVat"))) { #optional property not found
            $DiscountIncVat = $null
        } else {
            $DiscountIncVat = $JsonParameters.PSobject.Properties["DiscountIncVat"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "DiscountExVat"))) { #optional property not found
            $DiscountExVat = $null
        } else {
            $DiscountExVat = $JsonParameters.PSobject.Properties["DiscountExVat"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "PercentDiscount"))) { #optional property not found
            $PercentDiscount = $null
        } else {
            $PercentDiscount = $JsonParameters.PSobject.Properties["PercentDiscount"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Balance"))) { #optional property not found
            $Balance = $null
        } else {
            $Balance = $JsonParameters.PSobject.Properties["Balance"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ShippingFeeIncVat"))) { #optional property not found
            $ShippingFeeIncVat = $null
        } else {
            $ShippingFeeIncVat = $JsonParameters.PSobject.Properties["ShippingFeeIncVat"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ShippingFeeExVat"))) { #optional property not found
            $ShippingFeeExVat = $null
        } else {
            $ShippingFeeExVat = $JsonParameters.PSobject.Properties["ShippingFeeExVat"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "PaymentFeeIncVat"))) { #optional property not found
            $PaymentFeeIncVat = $null
        } else {
            $PaymentFeeIncVat = $JsonParameters.PSobject.Properties["PaymentFeeIncVat"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "PaymentFeeExVat"))) { #optional property not found
            $PaymentFeeExVat = $null
        } else {
            $PaymentFeeExVat = $JsonParameters.PSobject.Properties["PaymentFeeExVat"].value
        }

        $PSO = [PSCustomObject]@{
            "OrderId" = ${OrderId}
            "ExternalOrderId" = ${ExternalOrderId}
            "CartId" = ${CartId}
            "SessionId" = ${SessionId}
            "SiteId" = ${SiteId}
            "Currency" = ${Currency}
            "Status" = ${Status}
            "IpAddress" = ${IpAddress}
            "Message" = ${Message}
            "InternalMessage" = ${InternalMessage}
            "Locale" = ${Locale}
            "Rows" = ${Rows}
            "CampaignId" = ${CampaignId}
            "CampaignCode" = ${CampaignCode}
            "CampaignName" = ${CampaignName}
            "CampaignIds" = ${CampaignIds}
            "CampaignNames" = ${CampaignNames}
            "CustomerId" = ${CustomerId}
            "CustomerTypeId" = ${CustomerTypeId}
            "Gender" = ${Gender}
            "DateOfBirth" = ${DateOfBirth}
            "PersonalId" = ${PersonalId}
            "UserAgent" = ${UserAgent}
            "MetaData" = ${MetaData}
            "PaymentId" = ${PaymentId}
            "TransactionId" = ${TransactionId}
            "SecondaryTransactionId" = ${SecondaryTransactionId}
            "Country" = ${Country}
            "Company" = ${Company}
            "OrganizationNumber" = ${OrganizationNumber}
            "FirstName" = ${FirstName}
            "LastName" = ${LastName}
            "Email" = ${Email}
            "Address1" = ${Address1}
            "Address2" = ${Address2}
            "Zip" = ${Zip}
            "City" = ${City}
            "Region" = ${Region}
            "Phone" = ${Phone}
            "MobilePhone" = ${MobilePhone}
            "CareOf" = ${CareOf}
            "ShippingId" = ${ShippingId}
            "ShippingCountry" = ${ShippingCountry}
            "ShippingCompany" = ${ShippingCompany}
            "ShippingOrganizationNumber" = ${ShippingOrganizationNumber}
            "ShippingFirstName" = ${ShippingFirstName}
            "ShippingLastName" = ${ShippingLastName}
            "ShippingEmail" = ${ShippingEmail}
            "ShippingAddress1" = ${ShippingAddress1}
            "ShippingAddress2" = ${ShippingAddress2}
            "ShippingZip" = ${ShippingZip}
            "ShippingCity" = ${ShippingCity}
            "ShippingRegion" = ${ShippingRegion}
            "ShippingPhone" = ${ShippingPhone}
            "ShippingMobilePhone" = ${ShippingMobilePhone}
            "ShippingCareOf" = ${ShippingCareOf}
            "PickupPoint" = ${PickupPoint}
            "DesiredDeliveryDate" = ${DesiredDeliveryDate}
            "FreightClass" = ${FreightClass}
            "Sum" = ${Sum}
            "ExpectedSum" = ${ExpectedSum}
            "OrderValueIncVat" = ${OrderValueIncVat}
            "OrderValueExVat" = ${OrderValueExVat}
            "ItemValueIncVat" = ${ItemValueIncVat}
            "ItemValueExVat" = ${ItemValueExVat}
            "DiscountIncVat" = ${DiscountIncVat}
            "DiscountExVat" = ${DiscountExVat}
            "PercentDiscount" = ${PercentDiscount}
            "Balance" = ${Balance}
            "ShippingFeeIncVat" = ${ShippingFeeIncVat}
            "ShippingFeeExVat" = ${ShippingFeeExVat}
            "PaymentFeeIncVat" = ${PaymentFeeIncVat}
            "PaymentFeeExVat" = ${PaymentFeeExVat}
        }

        return $PSO
    }

}

