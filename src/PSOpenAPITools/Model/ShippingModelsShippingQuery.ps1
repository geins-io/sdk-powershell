#
# Geins Management API
#  Geins Management API is an RESTful api to power your applications who manages your geins services. Geins provides an easy-to-use and scalable solution for managing all aspects of an online store, from product listings and customer information to order processing and payment transactions.   :::tip With this API, you can build custom applications and integrate with third-party systems, dashboards and other bussiness logic apps. :::    ## Getting started Once you have created an account, you can start using the Management API by creating an `API key`. You can create as many API keys as you need. Each `API key` is connected to a specific account so you can keep track of operations and manage keys. You can find your `API key` in the `geins merchant center`.   ### Fast track Use one of our [SDKs](https://docs.geins.io/docs/sdk/introduction) to get started quickly. The SDKs are available for the most popular programming languages and frameworks.  Or, if you prefer to just take it for a test run:  [![Run in Postman](https://run.pstmn.io/button.svg)](https://god.gw.postman.com/run-collection/25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553?action=collection%2Ffork&collection-url=entityId%3D25895885-aaf6598f-1a7c-4949-85d7-ba846c42d553%26entityType%3Dcollection%26workspaceId%3Da2a179ce-158e-46b0-8d06-e9640f45112c)  ### Authentication Two authentication methods are supported:   - `API Key`   - `Basic Auth` 
# Version: v1.7
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

<#
.SYNOPSIS

No summary available.

.DESCRIPTION

A query to filter shipping options by.

.PARAMETER SiteId
The site ID the delivery options belong to. Required.
.PARAMETER CountryId
The country ID where the order should be shipped to.
.PARAMETER ShippingId
Carismar Shipping Option ID
.PARAMETER DeliveryOptionId
Unifaun Delivery Option ID
.PARAMETER Order
No description available.
.PARAMETER MinimumFreeShippingLimit
The cart sum limit for free shipping - to be used for conditions in the delivery checkout portal
.OUTPUTS

ShippingModelsShippingQuery<PSCustomObject>
#>

function Initialize-ShippingModelsShippingQuery {
    [CmdletBinding()]
    Param (
        [Parameter(Position = 0, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${SiteId},
        [Parameter(Position = 1, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${CountryId},
        [Parameter(Position = 2, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Int32]]
        ${ShippingId},
        [Parameter(Position = 3, ValueFromPipelineByPropertyName = $true)]
        [String]
        ${DeliveryOptionId},
        [Parameter(Position = 4, ValueFromPipelineByPropertyName = $true)]
        [PSCustomObject]
        ${Order},
        [Parameter(Position = 5, ValueFromPipelineByPropertyName = $true)]
        [System.Nullable[Double]]
        ${MinimumFreeShippingLimit}
    )

    Process {
        'Creating PSCustomObject: PSOpenAPITools => ShippingModelsShippingQuery' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug


        $PSO = [PSCustomObject]@{
            "SiteId" = ${SiteId}
            "CountryId" = ${CountryId}
            "ShippingId" = ${ShippingId}
            "DeliveryOptionId" = ${DeliveryOptionId}
            "Order" = ${Order}
            "MinimumFreeShippingLimit" = ${MinimumFreeShippingLimit}
        }


        return $PSO
    }
}

<#
.SYNOPSIS

Convert from JSON to ShippingModelsShippingQuery<PSCustomObject>

.DESCRIPTION

Convert from JSON to ShippingModelsShippingQuery<PSCustomObject>

.PARAMETER Json

Json object

.OUTPUTS

ShippingModelsShippingQuery<PSCustomObject>
#>
function ConvertFrom-JsonToShippingModelsShippingQuery {
    Param(
        [AllowEmptyString()]
        [string]$Json
    )

    Process {
        'Converting JSON to PSCustomObject: PSOpenAPITools => ShippingModelsShippingQuery' | Write-Debug
        $PSBoundParameters | Out-DebugParameter | Write-Debug

        $JsonParameters = ConvertFrom-Json -InputObject $Json

        # check if Json contains properties not defined in ShippingModelsShippingQuery
        $AllProperties = ("SiteId", "CountryId", "ShippingId", "DeliveryOptionId", "Order", "MinimumFreeShippingLimit")
        foreach ($name in $JsonParameters.PsObject.Properties.Name) {
            if (!($AllProperties.Contains($name))) {
                throw "Error! JSON key '$name' not found in the properties: $($AllProperties)"
            }
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "SiteId"))) { #optional property not found
            $SiteId = $null
        } else {
            $SiteId = $JsonParameters.PSobject.Properties["SiteId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "CountryId"))) { #optional property not found
            $CountryId = $null
        } else {
            $CountryId = $JsonParameters.PSobject.Properties["CountryId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "ShippingId"))) { #optional property not found
            $ShippingId = $null
        } else {
            $ShippingId = $JsonParameters.PSobject.Properties["ShippingId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "DeliveryOptionId"))) { #optional property not found
            $DeliveryOptionId = $null
        } else {
            $DeliveryOptionId = $JsonParameters.PSobject.Properties["DeliveryOptionId"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "Order"))) { #optional property not found
            $Order = $null
        } else {
            $Order = $JsonParameters.PSobject.Properties["Order"].value
        }

        if (!([bool]($JsonParameters.PSobject.Properties.name -match "MinimumFreeShippingLimit"))) { #optional property not found
            $MinimumFreeShippingLimit = $null
        } else {
            $MinimumFreeShippingLimit = $JsonParameters.PSobject.Properties["MinimumFreeShippingLimit"].value
        }

        $PSO = [PSCustomObject]@{
            "SiteId" = ${SiteId}
            "CountryId" = ${CountryId}
            "ShippingId" = ${ShippingId}
            "DeliveryOptionId" = ${DeliveryOptionId}
            "Order" = ${Order}
            "MinimumFreeShippingLimit" = ${MinimumFreeShippingLimit}
        }

        return $PSO
    }

}

